/*test h file*/
#ifndef _TEST_H_INCLUDED_
#define _TEST_H_INCLUDED_

#include <iostream>
#include <random>
#include <vector>

void func1(int m) {
	std::cout << "hello world " << std::endl;
}

double randNum() {// initialize random seed:
	std::random_device rd;  //Will be used to obtain a seed for the random number engine
	std::mt19937 gen(rd()); //Standard mersenne_twister_engine seeded with rd()
	std::uniform_real_distribution<> dis(0, 9);
	//Use dis to transform the random unsigned int generated by gen into a double in [0,1]
	//Each call to dis(gen) generates a new random double
	auto randx = dis(gen);        //get random x0
	//      std::cout << "Random X " << randx << std::endl;
	return randx;
}

void printVec (const std::vector<auto> vec) {
	for (auto i : vec){	//pythonic range-based for loops
		std::cout << i << "\t";
	}
	std::cout << std::endl;
}
#endif